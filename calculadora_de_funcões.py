# -*- coding: utf-8 -*-
"""calculadora_de_funcões.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wnFBKO3EFo5RczxzHq6XVpncel2fcV0H
"""

def menu_principal_main():
  print("1-FUNÇÃO EXPONENCIAL")
  print("2-MATRIZES")
  opcao_de_escolha=int(input("DIGITE A OPÇÃO:"))
menu_principal_main()
#PARA QUANDO O USUÁRIO ESCOLHER A FUNÇÃO DO SEGUNDO GRAU.

def menu_principal_funcao_2_grau(opcao_de_escolha):
  print("1-CALCULAR RAÍZES")
  print("2-CALCULAR FUNÇÃO")
  print("3-GERAR GRÁFICO")
  print("4-VOLTAR")
  print("5-SAIR")
  opcao=int(input("DIGITE A OPÇÃO ESCOLHIDA:"))

def menu_de_retorno():
  print("1-VOLTAR")
  print("2-TERMINAR")
  opcao_retorno=int(input("DIGITE UM VALOR PARA RETORNO:"))
  if opcao_retorno==1:
    menu_principal_main()
  while opcao_retorno==2:
    break

def calculando_raizes_de_numeros_imaginarios(b,delta,a):
  
  return delta
  raiz_1 = (-(b)+((delta)**(1/2)))/(2*a)
  raiz_2 = (-(b)-((delta)**(1/2)))/(2*a)
  return raiz_1
  return raiz_2

def calcular_raizes(opcao):
  
  print("FORMULA DE RESOLVER:")
  print("Delta=b²-4ac")
  print("-b²+raiz de delta)/2a")
  print("-b²-raiz de delta/2a") 
  a=float(input("DIGITE UM VALOR PARA A:"))
  b=float(input("DIGITE UM VALOR PARA B:"))
  c=float(input("DIGITE UM VALOR PARA C:"))
  
  delta=((b**2)-(4*a*c))
  
  if delta >0:  
    raiz_1 = ((b)+((delta)**(1/2)))/(2*a)
    raiz_2 = ((b)-((delta)**(1/2)))/(2*a)
    return raiz_1
    return raiz_2
  
  if delta <0:
    calculando_raizes_de_numeros_imaginarios()
  menu_de_retorno()
calcular_raizes(2)


def inserindo_os_coeficientes():
  a=float(input("DIGITE UM VALOR PARA A:"))
  x=float(input("DIGITE UM VALOR PARA X:"))
  b=float(input("DIGITE UM VALOR PARA B:"))
  c=float(input("DIGITE UM VALOR PARA C:"))
  formula=(a*(x**(2))+(b*x)+c)
  return formula
  menu_de_retorno()

def calcular_funcao(opcao):
  print("f(x)=ax²+bx+c")
  inserindo_os_coeficientes()

def gerando_grafico(opcao):
  import matplotlib.pyplot as plt
  import numpy as np
  eixo_x = []
  eixo_y = []
  zero = []
  calcular_raizes(opcao,raiz_1,raiz_2)
  return raiz_1
  return raiz_2
  variacao=raiz_2-raiz_1
  if variacao < 3:
      variacao = 3
  print(variacao)
  for x in np.arange(raiz_1 - variacao, raiz_2 + variacao, variacao / 100):
      y= calcular_funcao(2)
      eixo_x.append(x)
      eixo_y.append(y)
      zero.append(0.0)
  plt.plot(eixo_x,eixo_y,color="blue")
  plt.plot(eixo_x,zero,color="black")
  plt.show()


menu_principal_funcao_2_grau(1)
calcular_raizes(1)
gerando_grafico(3)